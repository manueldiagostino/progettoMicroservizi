version: '3.1'

services:
    adminer:
        image: adminer
        container_name: adminer
        hostname: adminer
        restart: always
        ports:
            - 8080:8080
    zookeeper:
        container_name: zookeeper
        image: 'bitnami/zookeeper:3.9.0'
        ports:
            - '2181:2181'
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
    kafka:
        container_name: kafka
        image: 'bitnami/kafka:3.1.0'
        ports:
            - '9092:9092'
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
        depends_on:
            - zookeeper

    # Autori
    authors_dbms:
        image: postgres
        container_name: authors_dbms
        hostname: authors_dbms
        restart: always
        ports:
            - 10000:5432
        env_file:
            - ./AuthorsHandler/AuthorsHandler.Repository/Database/.env
        volumes:
            - ./AuthorsHandler/AuthorsHandler.Repository/Database/scripts:/docker-entrypoint-initdb.d
            # - ./data:/var/lib/postgresql/data

    authors_microservice:
        depends_on:
            - authors_dbms
            - adminer
            - kafka
            - zookeeper
        image: authors_microservice
        build:
            context: .
            dockerfile: AuthorsHandler/AuthorsHandler.Api/Dockerfile
        ports:
            - 5000:5134

    # Utenti
    users_dbms:
        image: postgres
        container_name: users_dbms
        hostname: users_dbms
        restart: always
        ports:
            - 10001:5432
        env_file:
            - ./UsersHandler/UsersHandler.Repository/Database/.env
        volumes:
            - ./UsersHandler/UsersHandler.Repository/Database/scripts:/docker-entrypoint-initdb.d

    users_microservice:
        depends_on:
            - users_dbms
            - adminer
            - kafka
            - zookeeper
        image: users_microservice
        build:
            context: .
            dockerfile: UsersHandler/UsersHandler.Api/Dockerfile
        ports:
            - 5001:5134
        volumes:
            - ./UsersHandler/UsersHandler.Api/ProfilePictures:/app/ProfilePictures

     # Spartiti
    scores_dbms:
        image: postgres
        container_name: scores_dbms
        hostname: scores_dbms
        restart: always
        ports:
            - 10002:5432
        env_file:
            - ./MusicalScoresHandler/MusicalScoresHandler.Repository/Database/.env
        volumes:
            - ./MusicalScoresHandler/MusicalScoresHandler.Repository/Database/scripts:/docker-entrypoint-initdb.d

    scores_microservice:
        depends_on:
            - users_dbms
            - adminer
            - kafka
            - zookeeper
        image: scores_microservice
        build:
            context: .
            dockerfile: MusicalScoresHandler/MusicalScoresHandler.Api/Dockerfile
        ports:
            - 5002:5134
        volumes:
            - ./MusicalScoresHandler/MusicalScoresHandler.Api/PdfScores:/app/PdfScores